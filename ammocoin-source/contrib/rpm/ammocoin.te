policy_module(ammocoin, 1.100.1)

########################################
#
# Declarations
#

type ammocoin_t;
type ammocoin_exec_t;
init_daemon_domain(ammocoin_t, ammocoin_exec_t)

permissive ammocoin_t;

type ammocoin_initrc_exec_t;
init_script_file(ammocoin_initrc_exec_t)

type ammocoin_conf_t;
files_type(ammocoin_conf_t)

type ammocoin_var_lib_t;
files_type(ammocoin_var_lib_t)

type ammocoin_var_run_t;
files_type(ammocoin_var_run_t)

type ammocoin_port_t;
corenet_port(ammocoin_port_t)

########################################
#
# ammocoin local policy
#
allow ammocoin_t self:process { fork };

allow ammocoin_t self:fifo_file rw_fifo_file_perms;
allow ammocoin_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(ammocoin_t, ammocoin_conf_t, ammocoin_conf_t)
manage_files_pattern(ammocoin_t, ammocoin_conf_t, ammocoin_conf_t)

manage_dirs_pattern(ammocoin_t, ammocoin_var_lib_t, ammocoin_var_lib_t)
manage_files_pattern(ammocoin_t, ammocoin_var_lib_t, ammocoin_var_lib_t)
files_var_lib_filetrans(ammocoin_t, ammocoin_var_lib_t, { dir file })

manage_dirs_pattern(ammocoin_t, ammocoin_var_run_t, ammocoin_var_run_t)
manage_files_pattern(ammocoin_t, ammocoin_var_run_t, ammocoin_var_run_t)

sysnet_dns_name_resolve(ammocoin_t)
corenet_all_recvfrom_unlabeled(ammocoin_t)

allow ammocoin_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(ammocoin_t)
corenet_tcp_sendrecv_generic_node(ammocoin_t)
corenet_tcp_sendrecv_all_ports(ammocoin_t)
corenet_tcp_bind_generic_node(ammocoin_t)

gen_require(`
    type ammocoin_port_t;
')
allow ammocoin_t ammocoin_port_t:tcp_socket name_bind;

gen_require(`
    type ammocoin_port_t;
')
allow ammocoin_t ammocoin_port_t:tcp_socket name_connect;

domain_use_interactive_fds(ammocoin_t)

files_read_etc_files(ammocoin_t)

miscfiles_read_localization(ammocoin_t)

sysnet_dns_name_resolve(ammocoin_t)

allow ammocoin_t ammocoin_exec_t:file execute_no_trans;
allow ammocoin_t self:process setsched;
corecmd_exec_ls(ammocoin_t)
corenet_tcp_connect_http_port(ammocoin_t)
dev_read_urand(ammocoin_t)
fs_getattr_xattr_fs(ammocoin_t)
kernel_read_system_state(ammocoin_t)
